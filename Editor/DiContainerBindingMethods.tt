<#@ template language="C#" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension="g.cs"#>
using UJect.Assertions;
using Uject.Utilities;

namespace UJect
{
    public partial class DiContainer
    {
        #region Public Binding Interface
<#
    for (int i = 1; i <= 5; i++)
    {
        GenerateBinder(i);
    }

    void GenerateBinder(int numInterfaces)
    {
        var interfaceNames = new List<string>();
        for (int i = 1; i <= numInterfaces; i++)
        {
            var interfaceName = $"TInterface{i}";
            interfaceNames.Add(interfaceName);

        }
        var joinedInterfaces = string.Join(", ", interfaceNames);
#>
        [LibraryEntryPoint]
        public IDiBinder<<#=joinedInterfaces#>> Bind<<#=joinedInterfaces#>>()
        {
            RuntimeAssert.AssertIsFalse(isDisposed, "You should not try to bind to a disposed container!");
            return new DiBinder<<#=joinedInterfaces#>>(this);
        }
<#
    }
#>
        #endregion Public Binding Interface

    }
}